import React, { useEffect, useRef, useState } from 'react';
import { 
  EthicalAction, 
  GameResources, 
  EducationalContent, 
  CriticalThinkingQuote, 
  EthicalStats,
  GameMode, 
  GameAction
} from '@/types';
import EthicalActionCard from '../cards/EthicalActionCard';
import EducationalCard from '../cards/EducationalCard';
import QuoteCard from '../cards/QuoteCard';

interface EthicsTabProps {
  ethicalScore: number;
  criticalThinking: number;
  ethicalActions: EthicalAction[];
  resources: GameResources;
  gameMode: GameMode;
  currentEraId: string;
  educationalContent: EducationalContent[];
  quotes: CriticalThinkingQuote[];
  stats: EthicalStats;
  onPerformEthicalAction: (actionId: string) => void;
  onSwitchGameMode: (mode: GameMode) => void;
  dispatch: React.Dispatch<GameAction>;
}

  // Messages ironiques al√©atoires
  const getRandomMessage = () => {
    const messages = [
      "Ah, l'√©thique... cette relique d'une √©poque o√π on avait encore le temps d'y penser.",
      "Si vous lisez ceci, vous √™tes parmi les rares √† se soucier encore de l'√©thique. F√©licitations?",
      "Rappel: Les points d'√©thique n'ont pas de valeur mon√©taire. Dommage.",
      "√ätre √©thique dans un monde qui ne l'est pas... quel acte de r√©bellion.",
      "La pens√©e critique est le bug que personne n'a r√©ussi √† patcher.",
      "Certains joueurs affirment que ce jeu serait plus facile en ignorant cet onglet. √âtrange...",
      "Cette section a-t-elle toujours exist√©? Vos souvenirs semblent flous √† ce sujet...",
      "Les donn√©es de cette section pourraient diff√©rer de ce que d'autres joueurs voient. Co√Øncidence?",
      "L'√©thique ? Ah oui, ce truc qui fait perdre du temps √† ceux qui veulent gagner.",
      "Les leaders charismatiques ont une √©thique. Ils savent juste quand l'ignorer.",
      "Vous √™tes persuad√© d'√™tre une bonne personne ? Int√©ressant. Continuez.",
      "Choisissez bien vos valeurs. Apr√®s tout, elles d√©finiront la mani√®re dont vous expliquerez vos choix.",
      "La morale √©volue avec le temps... ou avec les opportunit√©s.",
      "Agir avec √©thique, c'est bien. Faire croire aux autres qu'on agit avec √©thique, c'est mieux.",
      "La bonne nouvelle ? Il y aura toujours pire que vous. Dormez tranquille.",
      "La pens√©e critique est un muscle. Heureusement, peu de gens lui font faire des reps.",
      "Le doute est une vertu‚Ä¶ jusqu‚Äô√† ce que vous le remettiez en question.",
      "On dit que la v√©rit√© lib√®re. Mais pas toutes.",
      "Penser par soi-m√™me est un art. Suivre la foule est une science.",
      "Les faits ne se soucient pas de votre opinion. Dommage que √ßa soit r√©ciproque.",
      "Chaque mensonge bien racont√© a un public pr√™t √† y croire.",
      "Seuls les na√Øfs croient qu'ils ne sont jamais manipul√©s. Vous √™tes na√Øf ?"
    ];
    
    return messages[Math.floor(Math.random() * messages.length)];
  };



/**
 * Tab component for ethics, educational content, and critical thinking
 */
const EthicsTab: React.FC<EthicsTabProps> = ({ 
  ethicalScore,
  criticalThinking,
  ethicalActions,
  resources,
  gameMode,
  currentEraId,
  educationalContent,
  quotes,
  stats,
  onPerformEthicalAction,
  onSwitchGameMode,
  dispatch
}) => {
  const [activeSection, setActiveSection] = useState<'actions' | 'education' | 'stats'>('actions');
  const [showGlitch, setShowGlitch] = useState(false);
  const [fadeIn, setFadeIn] = useState(false);

  const [randomMessage, setRandomMessage] = useState(getRandomMessage());
  const intervalRef = useRef<NodeJS.Timeout | null>(null); // Stocker l'ID de l'intervalle

  // Filter actions for current era
  const currentEraActions = ethicalActions.filter(
    action => action.eraId === currentEraId && !action.performed
  );
  
  const performedActions = ethicalActions.filter(
    action => action.performed
  );
  
  // Filter educational content for current era
  const currentEraContent = educationalContent.filter(
    content => content.eraId === currentEraId
  );
  
  // Get random quotes, preferring those matching current era
  const getRelevantQuotes = () => {
    const eraQuotes = quotes.filter(quote => quote.era === currentEraId);
    const otherQuotes = quotes.filter(quote => quote.era !== currentEraId);
    
    // Return 3 quotes, prioritizing era-relevant ones
    return [...eraQuotes, ...otherQuotes].slice(0, 3);
  };
  
  // Get ethical score color
  const getEthicalScoreColor = () => {
    if (ethicalScore >= 80) return 'text-green-400';
    if (ethicalScore >= 50) return 'text-yellow-400';
    if (ethicalScore >= 30) return 'text-orange-400';
    return 'text-red-400';
  };
  
  // Get critical thinking color
  const getCriticalThinkingColor = () => {
    if (criticalThinking >= 80) return 'text-blue-400';
    if (criticalThinking >= 50) return 'text-blue-300';
    if (criticalThinking >= 30) return 'text-blue-200';
    return 'text-gray-400';
  };

  // Random message glitch + fade effect
  useEffect(() => {
    if (intervalRef.current) return;
  
    intervalRef.current = setInterval(() => {
      setShowGlitch(true); // D√©but du glitch (disparition)
  
      setTimeout(() => {
        setShowGlitch(false); // Fin du glitch
        setRandomMessage(getRandomMessage()); // Changer le message
        setFadeIn(true); // Activer l‚Äôeffet de fondu
  
        setTimeout(() => {
          setFadeIn(false); // Retirer l‚Äôeffet apr√®s animation
        }, 1500); // Dur√©e de fade-in
      }, 3000); // Temps de disparition glitch
  
    }, 10000); // Intervalle entre les messages
  
   return () => {        
      if (intervalRef.current !== null) {
        clearInterval(intervalRef.current);
      }
    }
  }, []);
    
  return (
    <div className="mt-6">
      <div className="flex justify-between items-center mb-4">
        <h2 className="text-2xl font-bold">√âthique & R√©flexion</h2>
        <div className="flex space-x-4">
          <div>
            <span className="text-sm">√âthique:</span>
            <span className={`ml-1 font-bold ${getEthicalScoreColor()}`}>{ethicalScore}</span>
          </div>
          <div>
            <span className="text-sm">Pens√©e critique:</span>
            <span className={`ml-1 font-bold ${getCriticalThinkingColor()}`}>{criticalThinking}</span>
          </div>
        </div>
      </div>
      
      {/* Ironic message */}
      <div className="bg-gray-800 p-3 rounded-lg mb-4 text-sm text-gray-400 italic">
        <span className={`${showGlitch ? "glitch-fade-out" : ""} ${fadeIn ? "fade-in" : ""}`}>
          {randomMessage}
        </span>
      </div>
      
      {/* Mode Switch */}
      <div className="bg-gray-800 p-4 rounded-lg mb-6">
        <h3 className="text-lg font-semibold mb-3">Choisissez votre camp</h3>
        <div className="flex">
          <button
            className={`flex-1 py-2 px-4 rounded-l-lg ${
              gameMode === 'manipulation' 
                ? 'bg-red-900 text-white' 
                : 'bg-gray-700 text-gray-300 hover:bg-gray-600'
            }`}
            onClick={() => onSwitchGameMode('manipulation')}
          >
            Manipulation
          </button>
          <button
            className={`flex-1 py-2 px-4 rounded-r-lg ${
              gameMode === 'revelation' 
                ? 'bg-green-800 text-white' 
                : 'bg-gray-700 text-gray-300 hover:bg-gray-600'
            }`}
            onClick={() => onSwitchGameMode('revelation')}
            title={currentEraId !== 'coldWar' && currentEraId !== 'digital' ? "Ce mode sera d√©bloqu√© plus tard dans le jeu..." : ""}
            onTouchStart={(e) => {
              if (currentEraId !== 'coldWar' && currentEraId !== 'digital') {
                alert("Ce mode sera d√©bloqu√© plus tard dans le jeu...");
                e.preventDefault();
              }
            }}
          >
            R√©v√©lation {currentEraId !== 'coldWar' && currentEraId !== 'digital' && 'üîí'}
          </button>
        </div>
        <p className="mt-3 text-sm text-gray-300">
          {gameMode === 'manipulation' 
            ? "Qui se soucie de la v√©rit√© quand le pouvoir est √† port√©e de main? Continuez √† manipuler l'information, c'est tellement plus efficace..."
            : "Ah, vous avez choisi le camp des id√©alistes. Esp√©rons que la v√©rit√© vous m√®nera quelque part, dans ce monde qui pr√©f√®re les mensonges confortables."
          }
        </p>
      </div>
      
      {/* Section Navigation */}
      <div className="flex mb-4 border-b border-gray-700">
        <button
          className={`py-2 px-4 ${activeSection === 'actions' ? 'border-b-2 border-green-500 text-green-300' : 'text-gray-400 hover:text-gray-200'}`}
          onClick={() => setActiveSection('actions')}
        >
          Actions √âthiques
        </button>
        <button
          className={`py-2 px-4 ${activeSection === 'education' ? 'border-b-2 border-blue-500 text-blue-300' : 'text-gray-400 hover:text-gray-200'}`}
          onClick={() => setActiveSection('education')}
        >
          Techniques
        </button>
        <button
          className={`py-2 px-4 ${activeSection === 'stats' ? 'border-b-2 border-purple-500 text-purple-300' : 'text-gray-400 hover:text-gray-200'}`}
          onClick={() => setActiveSection('stats')}
        >
          Impact
        </button>
      </div>
      
      {/* Actions Section */}
      {activeSection === 'actions' && (
        <div>
          <p className="text-gray-300 mb-4">
            Sacrifiez des ressources pour des &quot;principes&quot; ‚Äî comme c&apos;est mignon. 
            Mais peut-√™tre que dans ce jeu comme dans la vie, le chemin difficile a ses propres r√©compenses...
          </p>
          
          {currentEraActions.length === 0 && performedActions.length === 0 ? (
            <div className="text-center p-6 bg-gray-800 rounded-lg">
              <p className="text-gray-400">Aucune action √©thique disponible dans cette √®re pour le moment.</p>
              <p className="text-gray-500 text-sm mt-2 italic">√âtrange, il y en avait peut-√™tre ici avant? Ou est-ce juste votre imagination...</p>
            </div>
          ) : (
            <>
              {currentEraActions.length > 0 && (
                <div className="mb-6">
                  <h3 className="text-xl font-semibold mb-3">Actions Disponibles</h3>
                  <div className="grid grid-cols-1 gap-4">
                    {currentEraActions.map(action => (
                      <EthicalActionCard
                        key={action.id}
                        action={action}
                        resources={resources}
                        onPerform={onPerformEthicalAction}
                      />
                    ))}
                  </div>
                </div>
              )}
              
              {performedActions.length > 0 && (
                <div>
                  <h3 className="text-xl font-semibold mb-3">Actions R√©alis√©es</h3>
                  <div className="grid grid-cols-1 gap-4">
                    {performedActions.map(action => (
                      <EthicalActionCard
                        key={action.id}
                        action={action}
                        resources={resources}
                        onPerform={onPerformEthicalAction}
                      />
                    ))}
                  </div>
                </div>
              )}
            </>
          )}
        </div>
      )}
      
      {/* Education Section */}
      {activeSection === 'education' && (
        <div>
          <p className="text-gray-300 mb-4">
            Voici les techniques que vous utilisez ‚Äî ou que vous combattez, selon votre humeur du jour.
            La fronti√®re est si mince qu&apos;on pourrait la franchir sans s&apos;en apercevoir...
          </p>
          
          <div className="mb-6">
            <h3 className="text-xl font-semibold mb-3">Techniques de l&apos;√àre</h3>
            {currentEraContent.map(content => (
              <EducationalCard key={content.id} content={content} dispatch={dispatch} />
            ))}
          </div>
          
          <div>
            <h3 className="text-xl font-semibold mb-3">Paroles des Sages</h3>
            <p className="text-sm text-gray-400 italic mb-3">
              Ils √©taient si confiants dans leurs v√©rit√©s... Touchant, n&apos;est-ce pas?
            </p>
            {getRelevantQuotes().map(quote => (
              <QuoteCard key={quote.id} quote={quote} dispatch={dispatch} />
            ))}
          </div>
        </div>
      )}
      
      {/* Stats Section */}
      {activeSection === 'stats' && (
        <div>
          <p className="text-gray-300 mb-4">
            Les chiffres ne mentent pas... ou peut-√™tre que si? Apr√®s tout, c&apos;est vous qui les fabriquez.
            Voici l&apos;impact que vous pr√©tendez avoir sur ce monde virtuel.
          </p>
          
          <div className="bg-gray-800 p-4 rounded-lg mb-6">
            <h3 className="text-xl font-semibold mb-3">Votre H√©ritage</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className="bg-gray-700 p-3 rounded-lg">
                <h4 className="font-medium mb-2 text-gray-300">Diffusion d&apos;Information</h4>
                <p className="text-2xl font-bold">{stats.livesImpacted.toLocaleString()}</p>
                <p className="text-xs text-gray-400">Esprits influenc√©s (pour le meilleur ou le pire)</p>
              </div>
              
              <div className="bg-gray-700 p-3 rounded-lg">
                <h4 className="font-medium mb-2 text-gray-300">Fins D√©couvertes</h4>
                <p className="text-2xl font-bold">{stats.endingsUnlocked} / {5}</p>
                <p className="text-xs text-gray-400">R√©alit√©s alternatives explor√©es</p>
              </div>
              
              <div className="bg-gray-700 p-3 rounded-lg">
                <h4 className="font-medium mb-2 text-gray-300">V√©rit√© vs Mensonge</h4>
                <div className="flex items-center">
                  <div className="flex-1 h-4 bg-gray-600 rounded-full overflow-hidden">
                    <div 
                      className="h-full bg-green-600"
                      style={{ width: `${(stats.ethicalActionsPerformed / (stats.ethicalActionsPerformed + stats.theoriesPropagated || 1)) * 100}%` }}
                    ></div>
                  </div>
                  <div className="ml-2 text-sm">
                    <span className="text-green-400">{stats.ethicalActionsPerformed}</span>
                    <span className="text-gray-400"> / </span>
                    <span className="text-red-400">{stats.theoriesPropagated}</span>
                  </div>
                </div>
                <p className="text-xs text-gray-400 mt-1">Actions √©thiques vs Th√©ories propag√©es</p>
              </div>
              
              <div className="bg-gray-700 p-3 rounded-lg">
                <h4 className="font-medium mb-2 text-gray-300">Prix de la Conscience</h4>
                <p className="text-2xl font-bold">{stats.influenceSacrificed.toFixed(0)}</p>
                <p className="text-xs text-gray-400">Influence sacrifi√©e sur l&apos;autel de l&apos;√©thique</p>
              </div>
            </div>
          </div>
          
          <div className="bg-gray-800 p-4 rounded-lg">
            <h3 className="text-xl font-semibold mb-3">Votre Profil</h3>
            <div className="mb-4">
              <div className="flex justify-between mb-1">
                <span>Score √âthique</span>
                <span className={getEthicalScoreColor()}>{ethicalScore}/100</span>
              </div>
              <div className="h-3 bg-gray-700 rounded-full overflow-hidden">
                <div 
                  className={`h-full ${
                    ethicalScore >= 80 ? 'bg-green-600' : 
                    ethicalScore >= 50 ? 'bg-yellow-600' : 
                    ethicalScore >= 30 ? 'bg-orange-600' : 
                    'bg-red-600'
                  }`}
                  style={{ width: `${ethicalScore}%` }}
                ></div>
              </div>
              <p className="text-xs text-gray-400 mt-1 italic">
                {ethicalScore < 30 ? "La morale est un luxe que vous ne pouvez plus vous permettre." :
                 ethicalScore < 60 ? "Assez d'√©thique pour dormir la nuit, pas assez pour changer le monde." :
                 "Votre conscience est presque aussi propre que vous le pr√©tendez."}
              </p>
            </div>
            
            <div>
              <div className="flex justify-between mb-1">
                <span>Pens√©e Critique</span>
                <span className={getCriticalThinkingColor()}>{criticalThinking}/100</span>
              </div>
              <div className="h-3 bg-gray-700 rounded-full overflow-hidden">
                <div 
                  className="h-full bg-blue-600"
                  style={{ width: `${criticalThinking}%` }}
                ></div>
              </div>
              <p className="text-xs text-gray-400 mt-1 italic">
                {criticalThinking < 30 ? "Pourquoi r√©fl√©chir quand on peut simplement croire?" :
                 criticalThinking < 60 ? "Vous commencez √† voir les ficelles de la manipulation." :
                 "Vous voyez √† travers le jeu... ou est-ce le jeu qui vous voit?"}
              </p>
            </div>
          </div>
          
          {/* Easter egg message with random chance */}
          {Math.random() > 0.8 && (
            <div className="mt-4 p-3 bg-gray-900 rounded text-xs text-gray-500 italic">
              {"// Les statistiques ont-elles chang√© depuis la derni√®re fois que vous les avez regard√©es? Un bug... ou autre chose?"}
            </div>
          )}
        </div>
      )}
    </div>
  );
};

export default EthicsTab;